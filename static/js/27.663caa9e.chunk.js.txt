{"version":3,"sources":["../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","hooks/form/useResetPassword.tsx","views/ResetPassword.tsx"],"names":["getLoadingButtonUtilityClass","slot","generateUtilityClass","loadingButtonClasses","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","startIconLoadingStart","endIconLoadingEnd","ownerState","theme","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","loading","color","fullWidth","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","position","visibility","display","variant","left","transform","palette","action","disabled","right","LoadingButton","React","inProps","ref","useThemeProps","children","idProp","id","loadingIndicatorProp","other","_objectWithoutPropertiesLoose","useId","_jsx","CircularProgress","size","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","_jsxs","className","schema","object","unique_id","string","required","new_password","confirm_password","oneOf","defaultResetPasswordFormValues","ResetPassword","navigate","useNavigate","params","useParams","form","useForm","resolver","yupResolver","defaultValues","resetForm","reset","useResetPasswordForm","control","handleSubmit","setValue","useLoading","startLoading","endLoading","isLoading","useToast","showErrorToast","showSuccessToast","useEffect","getUserId","a","usersService","forgotPasswordChallenge","data","user","onSubmit","values","changePasswordChallenge","Stack","direction","maxWidth","mx","px","Box","width","height","src","process","alt","style","Typography","textAlign","spacing","mt","render","field","error","fieldState","TextField","label","type","helperText","message","onClick"],"mappings":"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","file":"static/js/27.663caa9e.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: theme.palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: ownerState.loadingPosition === 'end' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      })]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      }), children]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;","import { useForm } from \"react-hook-form\";\r\nimport { object, string, ref } from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst schema = object({\r\n  unique_id: string().required(\"required\"),\r\n  new_password: string().required(\"required\"),\r\n  confirm_password: string()\r\n    .oneOf([ref(\"new_password\")], \"Passwords do not match\")\r\n    .required(\"required\"),\r\n});\r\n\r\nexport type ResetPasswordFormValues = {\r\n  unique_id: string;\r\n  new_password: string;\r\n  confirm_password: string;\r\n};\r\n\r\nexport const defaultResetPasswordFormValues: ResetPasswordFormValues = {\r\n  unique_id: \"\",\r\n  new_password: \"\",\r\n  confirm_password: \"\",\r\n};\r\n\r\nexport default function useResetPasswordForm() {\r\n  const form = useForm<ResetPasswordFormValues>({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: defaultResetPasswordFormValues,\r\n  });\r\n\r\n  const resetForm = () => form.reset(defaultResetPasswordFormValues);\r\n\r\n  return {\r\n    form,\r\n    resetForm,\r\n  };\r\n}\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport { Box, Stack, TextField, Typography } from \"@mui/material\";\r\nimport { Controller, SubmitHandler } from \"react-hook-form\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport useResetPasswordForm from \"../hooks/form/useResetPassword\";\r\nimport { ResetPasswordFormValues } from \"../hooks/form/useResetPassword\";\r\nimport useLoading from \"../hooks/useLoading\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport { useEffect } from \"react\";\r\nimport { usersService } from \"../api/usersService\";\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const params = useParams();\r\n\r\n  const {\r\n    form: { control, handleSubmit, setValue },\r\n  } = useResetPasswordForm();\r\n\r\n  const { startLoading, endLoading, isLoading } = useLoading();\r\n  const { showErrorToast, showSuccessToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    const getUserId = async () => {\r\n      startLoading();\r\n      try {\r\n        const data = await usersService.forgotPasswordChallenge(params.id);\r\n        setValue(\"unique_id\", data.user);\r\n      } catch (error) {\r\n        showErrorToast(error);\r\n      }\r\n      endLoading();\r\n    };\r\n    getUserId();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params]);\r\n\r\n  const onSubmit: SubmitHandler<ResetPasswordFormValues> = async (values) => {\r\n    startLoading();\r\n    try {\r\n      await usersService.changePasswordChallenge(values);\r\n      showSuccessToast(\"Password successfully changed!\");\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      showErrorToast(error);\r\n    }\r\n\r\n    endLoading();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"column\" maxWidth=\"800px\" mx=\"auto\" px={2}>\r\n        <Box width=\"200px\" height=\"200px\" mx=\"auto\" position=\"relative\">\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/orangeicon.png`}\r\n            alt=\"TR logo\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          />\r\n        </Box>\r\n\r\n        <Typography variant=\"h2\" textAlign=\"center\">\r\n          TROD APP\r\n        </Typography>\r\n        <Typography variant=\"h4\" textAlign=\"center\">\r\n          email: support@trodapp.com\r\n        </Typography>\r\n        <Typography variant=\"h4\" textAlign=\"center\">\r\n          phone number: +1 (888) 2206679\r\n        </Typography>\r\n\r\n        <Stack spacing={2} mt={2}>\r\n          <Controller\r\n            name=\"new_password\"\r\n            control={control}\r\n            render={({ field, fieldState: { error } }) => (\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                {...field}\r\n                error={!!error}\r\n                helperText={error?.message}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Controller\r\n            name=\"confirm_password\"\r\n            control={control}\r\n            render={({ field, fieldState: { error } }) => (\r\n              <TextField\r\n                fullWidth\r\n                label=\"Confirm password\"\r\n                {...field}\r\n                type=\"password\"\r\n                error={!!error}\r\n                helperText={error?.message}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            disabled={isLoading}\r\n            loading={isLoading}\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            Send\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"sourceRoot":""}