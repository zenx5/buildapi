{"version":3,"sources":["components/SelectStores.tsx","views/Welcome.js","utils/formatNumber.js","api/storesService.js","components/welcome/WelcomeGrapics.tsx","constants/store.ts"],"names":["SelectStores","useAuth","user","updateStores","useLoading","startLoading","endLoading","useState","stores","setStores","showErrorToast","useToast","useEffect","getStores","a","storesService","list","data","map","i","store","is_staff","Box","width","textAlign","alignContent","Autocomplete","fullWidth","getOptionLabel","option","name","value","store_default","onChange","evt","newValue","options","renderInput","params","TextField","label","Boolean","Chip","sx","color","mt","mx","getStoreStatusName","status","getStoreStatusColor","Welcome","totalSales","total","firstNumber","secondNumber","totalPayments","totalInvoices","totalThreeMonthsPayments","setData","getData","usersService","dashboard","response","unique_id","total_sales","total_payments","total_invoices","total_three_months_payments","Container","Typography","variant","alignCenter","Stack","direction","my","display","gridTemplateColumns","xs","md","gap","px","centerName","totalCenterNumber","firstLegendLabel","firstLegendNumber","secondLegendNumber","secondLegendLabel","fCurrency","number","numeral","format","fToUSDUnit","num","toFixed","split","first","second","fCurrencyUSD","BASE_URL","add","http","post","email","toLowerCase","phone_number","address","zipcode","state","get","id","uploadSpredsheet","formData2","FormData","append","file","due_date","issue_date","headers","uploadContract","formData","downloadSpread","responseType","downloadContract","deleteSpread","delete","deleteContract","listSpreads","listContracts","owners","storesOwned","removeOwner","update","put","addCard","last_4_digits_of_the_card","parseInt","CVV","month","year","listCard","addProvider","provider_username","username","provider_password","password","provider","getProviders","updateProvider","styled","theme","height","overflow","position","borderTop","palette","divider","top","CHART_HEIGHT","WelcomeGrapics","chartOptions","colors","useTheme","primary","main","chart","sparkline","enabled","plotOptions","bar","columnWidth","borderRadius","labels","tooltip","x","show","y","formatter","seriesName","title","marker","alignItems","p","background","flexGrow","mr","type","series","storeStatusSelect","findStatus","find","el"],"mappings":"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","file":"static/js/21.93f9ab41.chunk.js","sourcesContent":["import { Autocomplete, Box, Chip, TextField } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { storesService } from \"../api/storesService\";\r\nimport { getStoreStatusName, getStoreStatusColor } from \"../constants/store\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n// import useDialog from \"../hooks/useDialog\";\r\nimport useLoading from \"../hooks/useLoading\";\r\nimport useToast from \"../hooks/useToast\";\r\n// import DialogSelectStore from \"./DialogSelectStore\";\r\n\r\nexport const SelectStores = () => {\r\n  const { user, updateStores } = useAuth();\r\n  // const { isOpenDialog, openDialog, closeDialog } = useDialog();\r\n  const { startLoading, endLoading } = useLoading();\r\n  const [stores, setStores] = useState([]);\r\n  const { showErrorToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    const getStores = async () => {\r\n      startLoading();\r\n      try {\r\n        let data = await storesService.list();\r\n        data = data.map((i) => ({ ...i.store }));\r\n\r\n        setStores(data);\r\n      } catch (error) {\r\n        showErrorToast(error);\r\n      }\r\n      endLoading();\r\n    };\r\n    getStores();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (user.is_staff) return null;\r\n\r\n  return (\r\n    <Box width=\"100%\" textAlign=\"center\" alignContent={\"center\"}>\r\n      {/* <TextField\r\n        variant=\"outlined\"\r\n        label=\"select store\"\r\n        fullWidth\r\n        aria-readonly\r\n        onClick={openDialog}\r\n        value={user?.store_default?.name}\r\n      /> */}\r\n\r\n      <Autocomplete\r\n        fullWidth\r\n        getOptionLabel={(option) => option?.name}\r\n        value={user?.store_default}\r\n        onChange={(evt, newValue) => updateStores?.(newValue)}\r\n        options={stores}\r\n        // value={value}\r\n        renderInput={(params) => (\r\n          <TextField {...params} value={user?.store_default} label=\"*Stores\" />\r\n        )}\r\n      />\r\n\r\n      {Boolean(user?.store_default) && (\r\n        <Chip\r\n          sx={{\r\n            color: \"#fff\",\r\n            mt: 2,\r\n            mx: \"auto\",\r\n          }}\r\n          label={getStoreStatusName(user.store_default?.status)}\r\n          color={getStoreStatusColor(user.store_default?.status)}\r\n        />\r\n      )}\r\n\r\n      {/* <DialogSelectStore open={isOpenDialog} onClose={closeDialog} /> */}\r\n    </Box>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { Box, Stack, Container, Typography } from \"@mui/material\";\r\n\r\nimport WelcomeGraphics from \"../components/welcome/WelcomeGrapics\";\r\n\r\nimport useLoading from \"../hooks/useLoading\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport { SelectStores } from \"../components/SelectStores\";\r\nimport { usersService } from \"../api/usersService\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst Welcome = () => {\r\n  const { user } = useAuth();\r\n\r\n  const [data, setData] = useState({\r\n    totalSales: {\r\n      total: 0,\r\n      firstNumber: 0,\r\n      secondNumber: 0,\r\n    },\r\n    totalPayments: {\r\n      total: 0,\r\n      firstNumber: 0,\r\n      secondNumber: 0,\r\n    },\r\n    totalInvoices: {\r\n      total: 0,\r\n      firstNumber: 0,\r\n      secondNumber: 0,\r\n    },\r\n    totalThreeMonthsPayments: {\r\n      total: 0,\r\n      firstNumber: 0,\r\n      secondNumber: 0,\r\n    },\r\n  });\r\n  const { startLoading, endLoading } = useLoading();\r\n  const { showErrorToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      startLoading();\r\n      try {\r\n        // call api\r\n        // setData.\r\n        let response;\r\n\r\n        if (user.is_staff) {\r\n          response = await usersService.dashboard();\r\n        } else if (!user.is_staff && user.store_default) {\r\n          response = await usersService.dashboard(user.store_default.unique_id);\r\n        }\r\n\r\n        if (response) {\r\n          const value = {\r\n            totalSales: {\r\n              total: response.total_sales,\r\n              firstNumber: 0,\r\n              secondNumber: 0,\r\n            },\r\n            totalPayments: {\r\n              total: response.total_payments,\r\n              firstNumber: 0,\r\n              secondNumber: 0,\r\n            },\r\n            totalInvoices: {\r\n              total: response.total_invoices,\r\n              firstNumber: 0,\r\n              secondNumber: 0,\r\n            },\r\n            totalThreeMonthsPayments: {\r\n              total: response.total_three_months_payments,\r\n              firstNumber: 0,\r\n              secondNumber: 0,\r\n            },\r\n          };\r\n          setData(value);\r\n        }\r\n      } catch (error) {\r\n        showErrorToast(error);\r\n      }\r\n      endLoading();\r\n    };\r\n    getData();\r\n  }, [user]);\r\n\r\n  const { totalSales, totalPayments, totalInvoices, totalThreeMonthsPayments } =\r\n    data;\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h3\" alignCenter sx={{textAlign:'center'}}>Tracking Results On Demand</Typography>\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{\r\n          mx: 2,\r\n          my: 3,\r\n        }}\r\n      >\r\n        <SelectStores />\r\n      </Stack>\r\n\r\n      <Box\r\n        sx={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: {\r\n            xs: \"none\",\r\n            md: \"max-content max-content\",\r\n          },\r\n          gap: 2,\r\n          width: \"fit-content\",\r\n          mx: \"auto\",\r\n        }}\r\n      >\r\n        <Stack px={2} xs={6}>\r\n          <WelcomeGraphics\r\n            centerName=\"Sales\"\r\n            totalCenterNumber={data.totalSales.total}\r\n            firstLegendLabel=\"Active\"\r\n            firstLegendNumber={totalSales.firstNumber}\r\n            secondLegendNumber={totalSales.secondNumber}\r\n            secondLegendLabel=\"Inactive\"\r\n          />\r\n        </Stack>\r\n\r\n        <Stack px={2}>\r\n          <WelcomeGraphics\r\n            centerName=\"Payments\"\r\n            totalCenterNumber={totalPayments.total}\r\n            firstLegendLabel=\"Paid\"\r\n            firstLegendNumber={totalPayments.firstNumber}\r\n            secondLegendNumber={totalPayments.secondNumber}\r\n            secondLegendLabel=\"Pending\"\r\n          />\r\n        </Stack>\r\n\r\n        <Stack px={2}>\r\n          <WelcomeGraphics\r\n            centerName=\"Invoice\"\r\n            totalCenterNumber={totalInvoices.total}\r\n            firstLegendLabel=\"Paid\"\r\n            firstLegendNumber={totalInvoices.firstNumber}\r\n            secondLegendNumber={totalInvoices.secondNumber}\r\n            secondLegendLabel=\"Pending\"\r\n          />\r\n        </Stack>\r\n\r\n        <Stack px={2}>\r\n          <WelcomeGraphics\r\n            centerName=\"Quarterly Payments\"\r\n            totalCenterNumber={totalThreeMonthsPayments.total}\r\n            firstLegendLabel=\"Paid\"\r\n            firstLegendNumber={totalThreeMonthsPayments.firstNumber}\r\n            secondLegendNumber={totalThreeMonthsPayments.secondNumber}\r\n            secondLegendLabel=\"Pending\"\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import { replace } from \"lodash\";\r\nimport numeral from \"numeral\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fCurrency(number) {\r\n  return numeral(number).format(\"$ 0,0.00\");\r\n}\r\n\r\nexport function fToUSDUnit(num) {\r\n  if (num >= 1000000000) {\r\n    const n = (num / 1000000).toFixed(1);\r\n    const [first, second] = n.split(\".\");\r\n    const result = first + (second !== \"0\" ? `.${second}` : \"\");\r\n    return result + \"G\";\r\n  }\r\n  if (num >= 1000000) {\r\n    const n = (num / 1000000).toFixed(1);\r\n    const [first, second] = n.split(\".\");\r\n    const result = first + (second !== \"0\" ? `.${second}` : \"\");\r\n    return result + \"M\";\r\n  }\r\n  if (num >= 1000) {\r\n    const n = (num / 1000).toFixed(1);\r\n    const [first, second] = n.split(\".\");\r\n    const result = first + (second !== \"0\" ? `.${second}` : \"\");\r\n    return result + \"K\";\r\n  }\r\n  return numeral(num).format(\"0,0.00\");\r\n}\r\n\r\nexport function fCurrencyUSD(number) {\r\n  return numeral(number).format(\"0,0.00\");\r\n}\r\n\r\nexport function fCurrencyWithoutSimbol(number) {\r\n  return numeral(number).format(\"0,0.00\");\r\n}\r\n\r\nexport function fPercent(number) {\r\n  return numeral(number / 100).format(\"0.0%\");\r\n}\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  return replace(numeral(number).format(\"0.00a\"), \".00\", \"\");\r\n}\r\n\r\nexport function fData(number) {\r\n  return numeral(number).format(\"0.0 b\");\r\n}\r\n","import { http } from \"./httpClient\";\r\n\r\nconst BASE_URL = \"stores_owner\";\r\n\r\nexport const storesService = {\r\n  add: async (value) => {\r\n    const { data } = await http.post(`${BASE_URL}/`, {\r\n      name: value.name,\r\n      email: value.email.toLowerCase(),\r\n      phone_number: value.phone_number,\r\n      address: value.address,\r\n      zipcode: value.zipcode || null,\r\n      state: value.state,\r\n      // status: 'PA',\r\n    });\r\n    return data;\r\n  },\r\n\r\n  get: async (id) => {\r\n    const { data } = await http.get(`${BASE_URL}/${id}/`);\r\n    return data;\r\n  },\r\n\r\n  uploadSpredsheet: async(value) => {\r\n\r\n    let formData2 = new FormData();\r\n\r\n    formData2.append(\"file\", value.file);\r\n    formData2.append(\"store\", value.store);\r\n    formData2.append(\"due_date\", value.due_date);\r\n    formData2.append(\"issue_date\", value.issue_date);\r\n\r\n    const { data } = await http.post(\"spredsheet/\", formData2, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return data;\r\n\r\n  },\r\n\r\n  uploadContract: async (value) => {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", value.file);\r\n    formData.append(\"store\", value.store);\r\n    formData.append(\"due_date\", value.due_date);\r\n    formData.append(\"issue_date\", value.issue_date);\r\n\r\n    const { data } = await http.post(\"contract/\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return data;\r\n  },\r\n\r\n  downloadSpread: async (id) => {\r\n    const { data } = await http.get(`spredsheet/${id}/`, {\r\n      responseType: \"blob\",\r\n    });\r\n    return data;\r\n  },\r\n\r\n  downloadContract: async (id) => {\r\n    const { data } = await http.get(`contract/${id}/`, {\r\n      responseType: \"blob\",\r\n    });\r\n    return data;\r\n  },\r\n\r\n  deleteSpread: async (id) => {\r\n    const { data } = await http.delete(`spredsheet/${id}/`);\r\n    return data;\r\n  },\r\n\r\n  deleteContract: async (id) => {\r\n    const { data } = await http.delete(`contract/${id}/`);\r\n    return data;\r\n  },\r\n\r\n  listSpreads: async (id) => {\r\n    const { data } = await http.get(`spredsheet/${id}/store/`);\r\n    return data;\r\n  },\r\n\r\n  listContracts: async (id) => {\r\n    const { data } = await http.get(`contract/${id}/store/`);\r\n    return data;\r\n  },\r\n\r\n\r\n  list: async () => {\r\n    const { data } = await http.get(`${BASE_URL}/`);\r\n    return data;\r\n  },\r\n\r\n  owners: async (id) => {\r\n    const { data } = await http.get(`${BASE_URL}/${id}/owners/`);\r\n    return data;\r\n  },\r\n\r\n  storesOwned: async (id) => {\r\n    const { data } = await http.get(`${BASE_URL}/${id}/stores/`);\r\n    return data;\r\n  },\r\n\r\n  removeOwner: async (id) => {\r\n    const { data } = await http.delete(`${BASE_URL}/${id}/`);\r\n    return data;\r\n  },\r\n\r\n  update: async (id, value) => {\r\n    value.zipcode = !value.zipcode ? null : value.zipcode;\r\n\r\n    const { data } = await http.put(`${BASE_URL}/${id}/`, {\r\n      name: value.name,\r\n      email: value.email.toLowerCase(),\r\n      phone_number: value.phone_number,\r\n      address: value.address,\r\n      zipcode: value.zipcode,\r\n      state: value.state,\r\n      status: value.status,\r\n    });\r\n    return data;\r\n  },\r\n\r\n  addCard: async (value) => {\r\n    const { data } = await http.post(\"card_information/\", {\r\n      store: value.store,\r\n      last_4_digits_of_the_card: parseInt(value.last_4_digits_of_the_card),\r\n      CVV: value.CVV,\r\n      month: value.month,\r\n      year: value.year,\r\n    });\r\n    return data;\r\n  },\r\n\r\n  listCard: async (id) => {\r\n    const { data } = await http.get(`card_information/${id}/store/`);\r\n    return data;\r\n  },\r\n\r\n  addProvider: async (value) => {\r\n    const { data } = await http.post(`provider/`, {\r\n      store: value.store,\r\n      provider_username: value.username,\r\n      provider_password: value.password,\r\n      provider: value.provider,\r\n      last_4_digits_of_the_card: parseInt(value.last_4_digits_of_the_card),\r\n      CVV: value.CVV,\r\n      month: value.month,\r\n      year: value.year,\r\n    });\r\n    return data;\r\n  },\r\n\r\n  getProviders: async (id) => {\r\n    const { data } = await http.get(`provider/${id}/store/`);\r\n    return data;\r\n  },\r\n\r\n  updateProvider: async (id, value) => {\r\n    const { data } = await http.put(`provider/${id}/`, {\r\n      store: value.store,\r\n      provider_username: value.username,\r\n      provider_password: value.password,\r\n      provider: value.provider,\r\n      last_4_digits_of_the_card: parseInt(value.last_4_digits_of_the_card),\r\n      CVV: value.CVV,\r\n      month: value.month,\r\n      year: value.year,\r\n    });\r\n    return data;\r\n  },\r\n};\r\n","// import { useTheme } from \"@mui/material/styles\";\r\nimport { merge } from \"lodash\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { Box, Card, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport BaseOptionChart from \"../charts/BaseOptionChart\";\r\nimport { FC } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport { fCurrencyUSD, fToUSDUnit } from \"../../utils/formatNumber\";\r\n\r\nconst CHART_HEIGHT = 360;\r\nconst LEGEND_HEIGHT = 72;\r\n\r\nconst ChartWrapperStyle = styled(\"div\")(({ theme }) => ({\r\n  height: CHART_HEIGHT,\r\n  \"& .apexcharts-canvas svg\": { height: CHART_HEIGHT },\r\n  \"& .apexcharts-canvas svg,.apexcharts-canvas foreignObject\": {\r\n    overflow: \"visible\",\r\n  },\r\n  \"& .apexcharts-legend\": {\r\n    height: LEGEND_HEIGHT,\r\n    alignContent: \"center\",\r\n    position: \"relative !important\",\r\n    borderTop: `solid 1px ${theme.palette.divider}`,\r\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`,\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  centerName: string;\r\n  totalCenterNumber: number;\r\n  firstLegendLabel: string;\r\n  firstLegendNumber: number;\r\n  secondLegendLabel: string;\r\n  secondLegendNumber: number;\r\n  totalLabelNumbers?: string;\r\n}\r\n\r\nconst WelcomeGrapics: FC<Props> = ({\r\n  centerName = \"\",\r\n  totalCenterNumber = 0,\r\n  firstLegendLabel = \"\",\r\n  firstLegendNumber = 0,\r\n  secondLegendLabel = \"\",\r\n  secondLegendNumber = 0,\r\n}) => {\r\n  const theme = useTheme();\r\n  // const baseChart = BaseOptionChart();\r\n\r\n  // const chartOptions = merge(baseChart, {\r\n  //   stroke: {\r\n  //     show: true,\r\n  //     width: 2,\r\n  //     colors: [\"transparent\"],\r\n  //   },\r\n  //   xaxis: {\r\n  //     categories: [centerName],\r\n  //   },\r\n  // });\r\n\r\n  const chartOptions = {\r\n    colors: [theme.palette.primary.main],\r\n    chart: { sparkline: { enabled: true } },\r\n    plotOptions: { bar: { columnWidth: \"68%\", borderRadius: 2 } },\r\n    labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (seriesName) => seriesName,\r\n        title: {\r\n          formatter: () => \"\",\r\n        },\r\n      },\r\n      marker: { show: false },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: \"flex\", alignItems: \"center\", p: 3, background:\"\"}}>\r\n      <Box sx={{ flexGrow: 1, mr: 3 }}>\r\n        <Typography variant=\"subtitle2\">{centerName}</Typography>\r\n        {/* <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mt: 2, mb: 1 }}>\r\n        <IconWrapperStyle\r\n          sx={{\r\n            ...(PERCENT < 0 && {\r\n              color: 'error.main',\r\n              bgcolor: alpha(theme.palette.error.main, 0.16)\r\n            })\r\n          }}\r\n        >\r\n          <Icon width={16} height={16} icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill} />\r\n        </IconWrapperStyle>\r\n        <Typography component=\"span\" variant=\"subtitle2\">\r\n          {PERCENT > 0 && '+'}\r\n          {fPercent(PERCENT)}\r\n        </Typography>\r\n      </Stack> */}\r\n\r\n        <Typography variant=\"h4\">\r\n          {fToUSDUnit(totalCenterNumber)} USD{\" \"}\r\n        </Typography>\r\n      </Box>\r\n\r\n      <ReactApexChart\r\n        type=\"bar\"\r\n        series={[{ data: [10, 20, 30, 20, 10] }]}\r\n        options={chartOptions}\r\n        width={60}\r\n        height={36}\r\n      />\r\n    </Card>\r\n    // <Card>\r\n    //   <ChartWrapperStyle dir=\"ltr\">\r\n    //     <ReactApexChart\r\n    //       type=\"bar\"\r\n    //       series={[\r\n    //         {\r\n    //           name: firstLegendLabel,\r\n    //           data: [firstLegendNumber || 0],\r\n    //         },\r\n    //         {\r\n    //           name: secondLegendLabel,\r\n    //           data: [secondLegendNumber || 0],\r\n    //         },\r\n    //       ]}\r\n    //       options={chartOptions}\r\n    //       height={300}\r\n    //     />\r\n    //   </ChartWrapperStyle>\r\n    // </Card>\r\n  );\r\n};\r\n\r\nexport default WelcomeGrapics;\r\n","export const storeStatusSelect = [\r\n  {\r\n    value: \"all\",\r\n    label: \"All\",\r\n  },\r\n  {\r\n    value: \"A\",\r\n    label: \"Active\",\r\n  },\r\n  {\r\n    value: \"PA\",\r\n    label: \"Pending Activation\",\r\n  },\r\n  {\r\n    value: \"S\",\r\n    label: \"Suspended\",\r\n  },\r\n  {\r\n    value: \"DA\",\r\n    label: \"Denied activation\",\r\n  },\r\n  {\r\n    value: \"V\",\r\n    label: \"Vacation\",\r\n  },\r\n  {\r\n    value: \"ED\",\r\n    label: \"Every day\",\r\n  },\r\n];\r\n\r\nexport const getStoreStatusName = (status) => {\r\n  const findStatus = storeStatusSelect.find((el) => el.value === status);\r\n\r\n  if (findStatus) {\r\n    return findStatus.label;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const getStoreStatusColor = (status) => {\r\n  switch (status) {\r\n    case \"A\":\r\n      return \"success\";\r\n    case \"V\":\r\n    case \"ED\":\r\n    case \"PA\":\r\n      return \"warning\";\r\n    case \"S\":\r\n    case \"DA\":\r\n      return \"error\";\r\n    default:\r\n      return \"default\";\r\n  }\r\n};\r\n"],"sourceRoot":""}